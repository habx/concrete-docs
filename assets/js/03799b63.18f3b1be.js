"use strict";(self.webpackChunkconcrete_docs=self.webpackChunkconcrete_docs||[]).push([[332],{2463:(e,n,t)=>{t.d(n,{K:()=>v});var r,o,a,i,l,s=t(7294),p=t(2125),c=t(6697),u=t(336),m=t(1041),d=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},f=p.ZP.div(r||(r=d(["\n  margin: 2px 12px 0 -12px;\n"],["\n  margin: 2px 12px 0 -12px;\n"]))),y=p.ZP.div(a||(a=d(["\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: row;\n  align-items: flex-start;\n\n  padding: 12px 24px;\n  border-radius: 6px;\n\n  font-family: ",";\n  font-size: ","px;\n\n  background-color: var(\n    --alert-panel-background,\n    ","\n  );\n  color: var(\n    --alert-panel-color,\n    ","\n  );\n\n  ","\n"],["\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: row;\n  align-items: flex-start;\n\n  padding: 12px 24px;\n  border-radius: 6px;\n\n  font-family: ",";\n  font-size: ","px;\n\n  background-color: var(\n    --alert-panel-background,\n    ","\n  );\n  color: var(\n    --alert-panel-color,\n    ","\n  );\n\n  ","\n"])),m.rS.font(),(function(e){return e.$small?c.d.pluto.size:c.d.moon.size}),(function(e){return e.$error?m.rS.color("error",{variation:"calmer"}):e.$success?m.rS.color("success",{variation:"calmer"}):e.$warning?m.rS.color("warning",{variation:"calmer"}):e.$primary?m.rS.color("primary",{variation:"calmer"}):!e.$bare&&m.rS.neutralColor(100)}),(function(e){return e.$error?m.rS.color("error"):e.$success?m.rS.color("success"):e.$warning?m.rS.color("warning",{variation:"loud"}):e.$primary?m.rS.color("primary"):e.$bare?m.rS.neutralColor(400):m.rS.neutralColor(700)}),(function(e){return!(e.$bare||e.$error||e.$primary||e.$small||e.$success||e.$warning)&&(0,p.iv)(o||(o=d(["\n      "," {\n        color: var(--alert-panel-color, ",");\n      }\n    "],["\n      "," {\n        color: var(--alert-panel-color, ",");\n      }\n    "])),f,m.rS.neutralColor(500))})),k=p.ZP.div(i||(i=d(["\n  flex: 0 0 auto;\n\n  width: 48px;\n  margin: 2px 12px 0 -12px;\n"],["\n  flex: 0 0 auto;\n\n  width: 48px;\n  margin: 2px 12px 0 -12px;\n"]))),h=(0,p.ZP)(u.xv)(l||(l=d(["\n  margin-top: -2px;\n  font-weight: 500;\n  color: inherit;\n"],["\n  margin-top: -2px;\n  font-weight: 500;\n  color: inherit;\n"]))),g=function(){return g=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},g.apply(this,arguments)},x=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t},v=s.forwardRef((function(e,n){var t=e.bare,r=e.children,o=e.error,a=e.icon,i=e.illustration,l=e.primary,p=e.small,c=e.success,u=e.title,m=e.warning,d=x(e,["bare","children","error","icon","illustration","primary","small","success","title","warning"]);return s.createElement(y,g({$bare:t,$error:o,$primary:l,$small:p,$success:c,$warning:m,ref:n},d),i&&s.createElement(k,null,i),a&&s.createElement(f,null,a),s.createElement("div",null,u&&s.createElement(h,{type:p?"small":"regular"},u),r))}))},6059:(e,n,t)=>{t.r(n),t.d(n,{BasicConfirmUsage:()=>I,TypeContainer:()=>R,assets:()=>L,contentTitle:()=>$,default:()=>Z,frontMatter:()=>S,metadata:()=>E,toc:()=>z});var r,o,a=t(7462),i=t(1880),l=t(7294),s=t(3905),p=t(2125),c=t(9864),u=t(8004),m=t(1887),d=t(6354),f=t(2056),y=function(){return y=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var o in n=arguments[t])Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o]);return e},y.apply(this,arguments)},k=function(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)n.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(t[r[o]]=e[r[o]])}return t},h=l.forwardRef((function(e,n){var t=e.children,r=k(e,["children"]),o=(0,u.H)(),a=(0,d.U)(),i=function(e){var n=function(e){if(!e)return[];var t=[];return l.Children.forEach(e,(function(e){(0,c.isFragment)(e)?t.push.apply(t,n(e.props.children)):t.push(e)})),t};return n(e).filter((function(e){return!!e}))}(t);return l.useLayoutEffect((function(){if(o.isInLayout)return o.registerChild(m.p.ActionBar)}),[o]),l.createElement(f.q,y({backgroundColor:a,"data-in-layout":o.isInLayout},r,{ref:n}),l.createElement(f.Y,{"data-count":l.Children.count(i)},l.Children.map(i,(function(e,n){return l.createElement(l.Fragment,{key:n},e)}))))})),g=t(5408),x=t(7629),v=t(6787),C=l.createContext({confirmLabel:"Valider",cancelLabel:"Annuler",deleteLabel:"Supprimer"}),b=t(336),w=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},N=p.ZP.div(r||(r=w(["\n  display: flex;\n  flex-direction: column;\n"],["\n  display: flex;\n  flex-direction: column;\n"]))),T=t(8987),B=t(1833),O=t(2463),j=t(224),M=t(4481),P=t(8517);const S={title:"Async prompts"},$=void 0,E={unversionedId:"async-prompts",id:"async-prompts",title:"Async prompts",description:"Why async prompts ?",source:"@site/docs/async-prompts.mdx",sourceDirName:".",slug:"/async-prompts",permalink:"/concrete-docs/docs/async-prompts",draft:!1,editUrl:"https://github.com/habx/concrete-docs/edit/dev/docs/async-prompts.mdx",tags:[],version:"current",frontMatter:{title:"Async prompts"},sidebar:"docs",previous:{title:"Toggle Components",permalink:"/concrete-docs/docs/modal-like"},next:{title:"Table usage",permalink:"/concrete-docs/docs/table/usage"}},L={},z=[{value:"Why async prompts ?",id:"why-async-prompts-",level:2},{value:"Confirm",id:"confirm",level:2},{value:"Usage",id:"usage",level:3},{value:"Notify",id:"notify",level:2},{value:"Basic usage",id:"basic-usage",level:3},{value:"With illustration",id:"with-illustration",level:3},{value:"With JSX",id:"with-jsx",level:3},{value:"Markdown",id:"markdown",level:3},{value:"Options",id:"options",level:3},{value:"Types",id:"types",level:4},{value:"Alert",id:"alert",level:2},{value:"Example",id:"example",level:3},{value:"Prompt",id:"prompt",level:2},{value:"Example",id:"example-1",level:3}],I=()=>(0,s.kt)(g.z,{onClick:async()=>{const e=await(n={message:"Do you want to confirm ?",confirmLabel:"Yes",cancelLabel:"No"},t="string"==typeof n?{message:n}:n,(0,v.e)((function(e){var n=e.onResolve;return{title:t.title,hideCloseIcon:!0,persistent:!0,Component:function(){var e,r,o,a=l.useContext(C);return l.createElement(N,null,"string"==typeof t.message?l.createElement(b.xv,null,t.message):t.message,l.createElement(h,null,l.createElement(g.z,{ghost:!0,secondary:!0,onClick:function(){return n(!1)}},null!==(e=t.cancelLabel)&&void 0!==e?e:a.cancelLabel),l.createElement(g.z,{error:"delete"===t.type,ghost:"delete"===t.type,elementLeft:null!==(r=t.confirmIcon)&&void 0!==r?r:"delete"===t.type?l.createElement(x.J,{icon:"trash-outline"}):void 0,onClick:function(){return n(!0)}},null!==(o=t.confirmLabel)&&void 0!==o?o:a["delete"===t.type?"deleteLabel":"confirmLabel"])))},onClose:function(){return n(!1)}}})));var n,t;(0,T.h)("User response is "+(e?"yes":"no"))},mdxType:"Button"},"Click Me!"),R=p.ZP.div(o||(o=(0,i.Z)(["\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 24px;\n"]))),A={toc:z,BasicConfirmUsage:I,TypeContainer:R};function Z(e){let{components:n,...t}=e;return(0,s.kt)("wrapper",(0,a.Z)({},A,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"why-async-prompts-"},"Why async prompts ?"),(0,s.kt)("p",null,"Sometimes we need to get user confirmation after a form submission or any other interaction.\nBorwsers have built-in functions like ",(0,s.kt)("inlineCode",{parentName:"p"},"confirm")," that can get user validation but it won't be style.\nWith React it can be a pain to add a validation modal after submition. We came up with functions helpers inspired by\n",(0,s.kt)("a",{parentName:"p",href:"https://sweetalert2.github.io/"},"sweeetAlert")," that help us adding confirmation modals or even more complexe form called\nasynchronously."),(0,s.kt)("h2",{id:"confirm"},"Confirm"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Concrete")," exports a ",(0,s.kt)("inlineCode",{parentName:"p"},"confirm")," function that return a ",(0,s.kt)("em",{parentName:"p"},"promise")," waiting for user response."),(0,s.kt)("h3",{id:"usage"},"Usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import { confirm, notify, Button } from "@habx/ui-core";\n\nconst MyComponent = () => {\n  const handleSubmit = async () => {\n    const hasConfirmed = confirm("Do you want to confirm ?");\n    notify(`User response ${hasConfirmed ? "yes" : "no"}`);\n  };\n\n  return <Button onClick={handleSubmit}>Click Me!</Button>;\n};\n')),(0,s.kt)(I,{mdxType:"BasicConfirmUsage"}),(0,s.kt)("h2",{id:"notify"},"Notify"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"notify")," allows to render a sweet message at the bottom of the page from anywhere in the code\nas long as the code is behind the ",(0,s.kt)("inlineCode",{parentName:"p"},"Provider"),"."),(0,s.kt)("h3",{id:"basic-usage"},"Basic usage"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'const MyComponent = () => (\n  <Button onClick={() => notify("I can be called from anwhere !")}>\n    Click Me!\n  </Button>\n);\n')),(0,s.kt)(g.z,{onClick:()=>(0,T.h)("I can be called from anwhere !"),mdxType:"Button"},"Click Me!"),(0,s.kt)("h3",{id:"with-illustration"},"With illustration"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'const MyComponent = () => (\n  <Button\n    onClick={() =>\n      notify({\n        message: "hi",\n        illustration: <Icon icon="3D-building-outline" />,\n      })\n    }\n  >\n    Click Me!\n  </Button>\n);\n')),(0,s.kt)(g.z,{onClick:()=>(0,T.h)({message:"hi",illustration:(0,s.kt)(x.J,{icon:"3D-building-outline",mdxType:"Icon"})}),mdxType:"Button"},"Click Me!"),(0,s.kt)("h3",{id:"with-jsx"},"With JSX"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'const MyComponent = () => {\n  const message = (\n    <div>\n      <Title type="regular">Title</Title>\n      <Text>Text</Text>\n    </div>\n  );\n  return <Button onClick={() => notify({ message })}>Click Me!</Button>;\n};\n')),(0,s.kt)(g.z,{onClick:()=>(0,T.h)({message:(0,s.kt)("div",null,(0,s.kt)(B.D,{type:"regular",mdxType:"Title"},"Title"),(0,s.kt)(b.xv,{mdxType:"Text"},"Text"))}),mdxType:"Button"},"Click Me!"),(0,s.kt)("h3",{id:"markdown"},"Markdown"),(0,s.kt)("p",null,"You can pass directly markdown to ",(0,s.kt)("inlineCode",{parentName:"p"},"notify")," if you need more complex rendering without passing jsx"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'const MyComponent = () => (\n  <Button onClick={() => notify({ message: "**hi in bold**", markdown: true })}>\n    Click Me!\n  </Button>\n);\n')),(0,s.kt)(g.z,{onClick:()=>(0,T.h)({message:"**hi in bold**",markdown:!0}),mdxType:"Button"},"Click Me!"),(0,s.kt)("h3",{id:"options"},"Options"),(0,s.kt)("p",null,"You can pass a 2nd argument to notify to configure the notification as you like"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"duration"),": ",(0,s.kt)("inlineCode",{parentName:"li"},"number")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"type"),": ",(0,s.kt)("inlineCode",{parentName:"li"},"'info | 'warning' | 'error'"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'const MyComponent = () => (\n  <Button\n    onClick={() => notify("ERROR !", { duration: 10_000, type: "error" })}\n  >\n    Click Me!\n  </Button>\n);\n')),(0,s.kt)("h4",{id:"types"},"Types"),(0,s.kt)(R,{mdxType:"TypeContainer"},(0,s.kt)(g.z,{small:!0,onClick:()=>(0,T.h)("info",{type:"info"}),mdxType:"Button"},"info"),(0,s.kt)(g.z,{small:!0,warning:!0,onClick:()=>(0,T.h)("warning",{type:"warning"}),mdxType:"Button"},"warning"),(0,s.kt)(g.z,{small:!0,error:!0,onClick:()=>(0,T.h)("error",{type:"error"}),mdxType:"Button"},"error")),(0,s.kt)("h2",{id:"alert"},"Alert"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"alert")," allows to add an ",(0,s.kt)("inlineCode",{parentName:"p"},"AlertBanner")," at the very top of your application, where you placed your ",(0,s.kt)("inlineCode",{parentName:"p"},"Provider"),"."),(0,s.kt)("h3",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"jsx",jsx:!0},'const MyComponent = () => {\n  return <Button onClick={() => alert("I\'m an alert !"}>Click Me!</Button>;\n};\n\n')),(0,s.kt)(O.K,{mdxType:"AlertPanel"},"In this example, the provider is scoped to the next Card"),(0,s.kt)("br",null),(0,s.kt)(j.Z,{spacing:"regular",outline:!0,mdxType:"Card"},(0,s.kt)(M.z,{mdxType:"Provider"},(0,s.kt)(g.z,{small:!0,onClick:()=>(0,P.Z)("I'm an alert !"),mdxType:"Button"},"Show me an alert"))),(0,s.kt)("h2",{id:"prompt"},"Prompt"),(0,s.kt)("p",null,"Prompt is a full customizable async util that render either a ",(0,s.kt)("inlineCode",{parentName:"p"},"Modal")," or a ",(0,s.kt)("inlineCode",{parentName:"p"},"LightBox")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"prompt")," takes a ",(0,s.kt)("em",{parentName:"p"},"function")," as first argument that should return an object with a ",(0,s.kt)("inlineCode",{parentName:"p"},"Component")," field.\nIt returns a promise that is resolved by calling the ",(0,s.kt)("inlineCode",{parentName:"p"},"onResolve")," function passed in the object of the first argument."),(0,s.kt)("p",null,"A ",(0,s.kt)("inlineCode",{parentName:"p"},"Modal")," is used by default but you can pass ",(0,s.kt)("inlineCode",{parentName:"p"},"fullscreen: true")," to use the ",(0,s.kt)("inlineCode",{parentName:"p"},"LightBox")," component.\nOther ",(0,s.kt)("inlineCode",{parentName:"p"},"Modal")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"LightBox")," props can be passed as params."),(0,s.kt)("h3",{id:"example-1"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-jsx"},'import { prompt } from "@habx/ui-core";\n\nconst formResult = await prompt(({ onResolve }) => ({\n  Component: () => <form onSubmit={onResolve}>// you form</form>,\n}));\nif (formResult) {\n  // use your form result\n}\n')))}Z.isMDXComponent=!0}}]);